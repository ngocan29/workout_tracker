//1Ô∏è‚É£ L·∫•y t·∫•t c·∫£ l·ªãch h·∫πn (GET /)
const lichhen = await Lichhen.find()
  .populate('khachhangID nhanvienID createdBy')
  .sort({ ngayhen: 1 }); // s·∫Øp x·∫øp theo ng√†y g·∫ßn nh·∫•t


//2Ô∏è‚É£ L·∫•y l·ªãch h·∫πn theo kh√°ch h√†ng v√† nh√¢n vi√™n (GET /khachhang/:khachhangID/nhanvien/:nhanvienID)
const lichhen = await Lichhen.find({
  khachhangID: req.params.khachhangID,
  nhanvienID: req.params.nhanvienID,
})
  .populate('khachhangID nhanvienID')
  .sort({ ngayhen: 1 }); // hi·ªÉn th·ªã l·ªãch g·∫ßn nh·∫•t ƒë·∫ßu ti√™n


//3Ô∏è‚É£ Th√™m l·ªãch h·∫πn (POST /)
//Ki·ªÉm tra req.user._id (ng∆∞·ªùi g·ª≠i y√™u c·∫ßu) c√≥ tr√πng nhanvienID kh√¥ng.
//N·∫øu kh√¥ng tr√πng, tr·∫£ v·ªÅ 403 - Kh√¥ng c√≥ quy·ªÅn.
if (req.user._id.toString() !== req.body.nhanvienID) {
  return res.status(403).json({ message: 'B·∫°n kh√¥ng c√≥ quy·ªÅn t·∫°o l·ªãch h·∫πn cho kh√°ch h√†ng n√†y.' });
}
const newLichhen = await Lichhen.create({
  ...req.body,
  createdBy: req.user._id,
});


//4Ô∏è‚É£ S·ª≠a l·ªãch h·∫πn (PUT /:id)
//Ki·ªÉm tra ng∆∞·ªùi s·ª≠a c√≥ ph·∫£i l√† nh√¢n vi√™n ph·ª• tr√°ch ho·∫∑c ng∆∞·ªùi t·∫°o kh√¥ng.
//N·∫øu kh√¥ng, t·ª´ ch·ªëi.
const lichhen = await Lichhen.findById(req.params.id);
if (!lichhen) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y l·ªãch h·∫πn' });

if (lichhen.nhanvienID.toString() !== req.user._id.toString()) {
  return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn s·ª≠a l·ªãch h·∫πn n√†y.' });
}
const updated = await Lichhen.findByIdAndUpdate(req.params.id, req.body, { new: true });
res.json(updated);


//5Ô∏è‚É£ X√≥a l·ªãch h·∫πn (DELETE /:id)
const lichhen = await Lichhen.findById(req.params.id);
if (!lichhen) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y l·ªãch h·∫πn' });

if (lichhen.nhanvienID.toString() !== req.user._id.toString()) {
  return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn x√≥a l·ªãch h·∫πn n√†y.' });
}

await Lichhen.findByIdAndDelete(req.params.id);
res.json({ message: 'ƒê√£ x√≥a l·ªãch h·∫πn' });

üõ£Ô∏è IV. Router (routes/lichhenRoutes.js)
import express from 'express';
import {
  getAllLichhen,
  getLichhenByKhachhangAndNhanvien,
  createLichhen,
  updateLichhen,
  deleteLichhen
} from '../controllers/lichhenController.js';
import { protect } from '../middleware/authMiddleware.js'; // middleware x√°c th·ª±c JWT

const router = express.Router();

router.get('/', protect, getAllLichhen);
router.get('/khachhang/:khachhangID/nhanvien/:nhanvienID', protect, getLichhenByKhachhangAndNhanvien);
router.post('/', protect, createLichhen);
router.put('/:id', protect, updateLichhen);
router.delete('/:id', protect, deleteLichhen);

export default router;
import React from 'react'; // Nh·∫≠p React
import { View, TouchableOpacity, Text, StyleSheet } from 'react-native'; // Nh·∫≠p c√°c th√†nh ph·∫ßn giao di·ªán
import { Ionicons } from '@expo/vector-icons'; // Nh·∫≠p Ionicons cho icon
import { Colors } from '../app-example/constants/Colors'; // Import Colors

export default function BottomTabBar({ currentScreen, setCurrentScreen, branchName, isDarkMode, isBusiness }) {
  // Debug log
  console.log('BottomTabBar - isBusiness:', isBusiness);
  
  // Danh s√°ch c√°c tab v·ªõi th√¥ng tin icon v√† label
  const getTabsForUser = () => {
    if (isBusiness) {
      return [
        { key: 'home', icon: 'home-outline', activeIcon: 'home', label: 'Trang Ch·ªß' },
        { key: 'workout', icon: 'fitness-outline', activeIcon: 'fitness', label: 'T·∫≠p Luy·ªán' },
        { key: 'customers', icon: 'people-outline', activeIcon: 'people', label: 'Kh√°ch h√†ng' },
        { key: 'employees', icon: 'briefcase-outline', activeIcon: 'briefcase', label: 'Nh√¢n vi√™n' },
        { key: 'profile', icon: 'person-outline', activeIcon: 'person', label: 'H·ªì S∆°' },
      ];
    } else {
      return [
        { key: 'home', icon: 'home-outline', activeIcon: 'home', label: 'Trang Ch·ªß' },
        { key: 'workout', icon: 'fitness-outline', activeIcon: 'fitness', label: 'T·∫≠p Luy·ªán' },
        { key: 'nutrition', icon: 'restaurant-outline', activeIcon: 'restaurant', label: 'Dinh D∆∞·ª°ng' },
        { key: 'progress', icon: 'trending-up-outline', activeIcon: 'trending-up', label: 'Ti·∫øn ƒê·ªô' },
        { key: 'profile', icon: 'person-outline', activeIcon: 'person', label: 'H·ªì S∆°' },
      ];
    }
  };

  const tabs = getTabsForUser();

  return (
    <View style={[styles.container, { 
      backgroundColor: isDarkMode ? Colors.darkSurface : Colors.white,
      borderTopColor: isDarkMode ? Colors.darkBackground : '#e5e5e5'
    }]}> {/* Container cho bottom tab bar */}
      {/* Header hi·ªÉn th·ªã t√™n chi nh√°nh */}
      {branchName && (
        <View style={[styles.header, {
          backgroundColor: isDarkMode ? Colors.darkBackground : '#f8fafc',
          borderBottomColor: isDarkMode ? Colors.darkSurface : '#e5e5e5'
        }]}>
          <Text style={[styles.branchName, {
            color: isDarkMode ? Colors.darkText : '#374151'
          }]}>üìç {branchName}</Text> {/* Hi·ªÉn th·ªã t√™n chi nh√°nh v·ªõi icon */}
        </View>
      )}
      
      {/* Danh s√°ch c√°c tab */}
      <View style={styles.tabContainer}>
        {tabs.map((tab) => {
          const isActive = currentScreen === tab.key; // Ki·ªÉm tra tab c√≥ ƒëang active kh√¥ng
          
          return (
            <TouchableOpacity
              key={tab.key}
              style={[
                styles.tab, 
                isActive && {
                  backgroundColor: isDarkMode ? Colors.darkBackground : '#ede9fe'
                }
              ]} // Style tab v·ªõi highlight khi active
              onPress={() => setCurrentScreen(tab.key)} // Thay ƒë·ªïi m√†n h√¨nh khi nh·∫•n tab
              activeOpacity={0.7} // Hi·ªáu ·ª©ng nh·∫•n
            >
              <Ionicons
                name={isActive ? tab.activeIcon : tab.icon} // Icon thay ƒë·ªïi khi active
                size={24}
                color={isActive ? (isDarkMode ? Colors.darkGreen : Colors.darkGreen) : (isDarkMode ? Colors.darkSecondary : '#8e8e93')} // M√†u icon thay ƒë·ªïi khi active
              />
              <Text style={[
                styles.tabLabel, 
                isActive && styles.activeTabLabel,
                { color: isActive ? (isDarkMode ? Colors.darkGreen : Colors.darkGreen) : (isDarkMode ? Colors.darkSecondary : '#8e8e93') }
              ]}> {/* Label tab */}
                {tab.label}
              </Text>
            </TouchableOpacity>
          );
        })}
      </View>
    </View>
  );
}

const styles = StyleSheet.create({ // Style cho bottom tab bar
  container: { // Container ch√≠nh
    borderTopWidth: 1,
    paddingBottom: 20, // Padding cho safe area
  },
  header: { // Header hi·ªÉn th·ªã t√™n chi nh√°nh
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderBottomWidth: 1,
  },
  branchName: { // Style cho t√™n chi nh√°nh
    fontSize: 14,
    fontWeight: '600',
    textAlign: 'center',
  },
  tabContainer: { // Container cho c√°c tab
    flexDirection: 'row',
    paddingHorizontal: 8,
    paddingTop: 8,
  },
  tab: { // Style cho m·ªói tab
    flex: 1,
    alignItems: 'center',
    paddingVertical: 8,
    paddingHorizontal: 4,
    borderRadius: 8,
  },
  tabLabel: { // Style cho label tab
    fontSize: 12,
    marginTop: 4,
    textAlign: 'center',
    fontWeight: '500',
  },
  activeTabLabel: { // Style cho label tab active
    fontWeight: '600',
  },
});